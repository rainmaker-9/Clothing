from flask import Flask, make_response, redirect,render_template, request, session,url_for,flash, jsonify
from mysql.connector import MySQLConnection

app=Flask(__name__)

config = {
	"host": "localhost",
	"user": "root",
	"password": "",
	"port": 3307,
	"database": "clothing_store",
	"charset": "utf8mb4",
	"collation": "utf8mb4_unicode_ci"
}

cnx=MySQLConnection(**config)
app.secret_key='Cloth'
@app.route('/')
def home():
	return render_template('home.html')

@app.route('/login')
def login():
        return render_template('form.html')

@app.route('/sign')
def sign():
        return render_template('form.html')

@app.route('/signup', methods=['POST'])
def signup():
	if request.method=='POST':
		fname=request.form.get("fname")
		lname=request.form.get("lname")
		email=request.form.get("email")
		pass1=request.form.get("pass1")
		pass2=request.form.get("pass2")
		cursor=cnx.cursor()
		query="INSERT INTO project.signup(fname,lname,email,pass1,pass2) VALUES(%s,%s,%s,%s,%s)"
		val=(fname,lname,email,pass1,pass2)
		cursor.execute(query,val)
		cnx.commit()
		return render_template("form.html",fname=fname,lname=lname,email=email,pass1=pass1,pass2=pass2)
	

@app.route('/error')
def error():
    flash('Password is incorrect')
    return render_template('error.html')


@app.route('/display', methods=['POST'])
def display():
	if request.method=='POST':
		session['email']=request.form['email']
		email=request.form['email']
		passw=request.form['passw']
		cursor=cnx.cursor()
		query="SELECT * FROM project.signup where email=%s and pass1=%s"
		val=(email,passw)
		cursor.execute(query,val)
		data=cursor.fetchall()
		cursor.close()

	if data:
		if passw==data[0][3]:
			resp=make_response(render_template("index.html"))
			return resp
		else:
			return redirect(url_for('error'))

'''_________________products page_______________________'''


@app.route('/shop',methods=['GET'])
def shop():
		cursor=cnx.cursor()
		query="SELECT distinct(pmain.pid),pimage.imgpath,pmain.pname,pdetail.price from pmain,pdetail,pimage where pmain.pid=pdetail.pid and pmain.pid=pimage.pid"
		cursor.execute(query)
		data=cursor.fetchall()

		if session.get('email'):
			cursor2=cnx.cursor()
			query="SELECT COUNT(id) as total FROM addtocart WHERE addtocart.email = %s"
			email = session['email']
			val=(email,)
			cursor2.execute(query, val)
			cartData=cursor.fetchone()
			print(data)
			return render_template('products.html', product=data, count=cartData[0])
		else:
			return render_template('products.html', product=data)


'''_________________cart page_______________________'''
@app.route('/cart/<int:pid>',methods=['POST','GET'])
def cart(pid):	
	#pid=request.form.get("pid")
	cursor=mysql.connection.cursor()
	query = "SELECT DISTINCT pmain.pname,pdetail.size,pdetail.price,pimage.imgpath,pspecification.colour,pmain.pid FROM project.pmain, project.pdetail, project.pimage,project.pspecification where pdetail.pid=pmain.pid and pmain.pid=pimage.pid and pmain.pid=pspecification.pid and pmain.pid=%s"
	#JOIN project.pdetail ON pmain.pid=pdetail.pid JOIN project.pimage ON pmain.pid=pimage.pid WHERE pmain.pid=%s"
	cursor.execute(query,(pid,))
	data=cursor.fetchall() 
	print(data)

	cursor2=mysql.connection.cursor()
	query="SELECT COUNT(id) as total FROM project.addtocart WHERE addtocart.email = %s"
	email = session['email']
	val=(email,)
	cursor2.execute(query, val)
	cartData=cursor.fetchone()
	return render_template('cart.html', product=data, count=cartData[0])




@app.route('/addtocart',methods=['POST','GET'])
def addtocart():
	cursor = mysql.connection.cursor()
	query = "SELECT * FROM project.addtocart"
	cursor.execute(query)
	data=cursor.fetchall()
	
	cursor2=mysql.connection.cursor()
	query = "SELECT COUNT(id) as total FROM project.addtocart WHERE addtocart.email = %s"
	email = session['email']
	val=(email,)
	cursor2.execute(query, val)
	cartData=cursor.fetchone()

	return render_template('cart1.html', product=data , count=cartData[0])


@app.route('/addtocart1', methods =['POST'])
def addtocart1():
	if request.method=='POST':
		print(request.form)
		pid = request.form['pid']
		pname = request.form['pname']
		price = request.form['price']
		size = request.form['size']
		colour = request.form['colour']
		# date = request.form['date']
		cursor = mysql.connection.cursor()
		query='INSERT INTO project.addtocart(pid,pname,price,size,colour,date,email) VALUES (%s, %s, %s, %s, %s, now(),%s)'
		val=(pid,pname,price,size,colour,session['email'])
		cursor.execute(query,val)
		mysql.connection.commit()
		if(cursor.rowcount > 0):
			flash('Product added to cart', 'success')
		else:
			flash('Failed to add', 'error')
		session['id']=pid
		return redirect(url_for('addtocart'))


@app.route('/checkout')
def checkout():
		cursor = mysql.connection.cursor()
		query = "SELECT DISTINCT addtocart.*,pimage.imgpath,pdetail.quantity as max FROM project.addtocart JOIN project.pimage ON pimage.pid = addtocart.pid JOIN project.pdetail ON pdetail.pid = addtocart.pid WHERE addtocart.email = %s"
		val=(session['email'], )
		cursor.execute(query, val)
		data=cursor.fetchall()
		return render_template('checkout.html', cartItems=jsonify(data).json)

@app.route('/remove-cart-item', methods =['POST'] )
def removeFromCart():
	cartItemId = int(request.form['cartItem'])
	cursor = cnx.cursor()
	query = "DELETE FROM project.addtocart WHERE addtocart.id = %s"
	val=(cartItemId, )
	cursor.execute(query, val)
	cnx.commit()
	if(cursor.rowcount > 0):
		result={'status': True, 'message': 'Removed from cart'}
	else:
		result={'status': False, 'message': 'Failed to remove from cart'}
	return jsonify(result)

@app.route('/checkoutpage', methods =['POST'] )
def checkoutPage():
	return render_template()

@app.route('/logout')
def logout():
	session.pop('email',None)
	
	return redirect(url_for("signup"))

if (__name__  == '__main__'):
	app.run(debug=True)